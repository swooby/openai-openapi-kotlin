/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.openai.models

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * The Upload object can accept byte chunks in the form of Parts. 
 *
 * @param id The Upload unique identifier, which can be referenced in API endpoints.
 * @param createdAt The Unix timestamp (in seconds) for when the Upload was created.
 * @param filename The name of the file to be uploaded.
 * @param bytes The intended number of bytes to be uploaded.
 * @param purpose The intended purpose of the file. [Please refer here](/docs/api-reference/files/object#files/object-purpose) for acceptable values.
 * @param status The status of the Upload.
 * @param expiresAt The Unix timestamp (in seconds) for when the Upload was created.
 * @param `object` The object type, which is always \"upload\".
 * @param file 
 */


data class Upload (

    /* The Upload unique identifier, which can be referenced in API endpoints. */
    @Json(name = "id")
    val id: kotlin.String,

    /* The Unix timestamp (in seconds) for when the Upload was created. */
    @Json(name = "created_at")
    val createdAt: kotlin.Int,

    /* The name of the file to be uploaded. */
    @Json(name = "filename")
    val filename: kotlin.String,

    /* The intended number of bytes to be uploaded. */
    @Json(name = "bytes")
    val bytes: kotlin.Int,

    /* The intended purpose of the file. [Please refer here](/docs/api-reference/files/object#files/object-purpose) for acceptable values. */
    @Json(name = "purpose")
    val purpose: kotlin.String,

    /* The status of the Upload. */
    @Json(name = "status")
    val status: Upload.Status,

    /* The Unix timestamp (in seconds) for when the Upload was created. */
    @Json(name = "expires_at")
    val expiresAt: kotlin.Int,

    /* The object type, which is always \"upload\". */
    @Json(name = "object")
    val `object`: Upload.`Object`? = null,

    @Json(name = "file")
    val file: UploadFile? = null

) {

    /**
     * The status of the Upload.
     *
     * Values: pending,completed,cancelled,expired
     */
    @JsonClass(generateAdapter = false)
    enum class Status(val value: kotlin.String) {
        @Json(name = "pending") pending("pending"),
        @Json(name = "completed") completed("completed"),
        @Json(name = "cancelled") cancelled("cancelled"),
        @Json(name = "expired") expired("expired");
    }
    /**
     * The object type, which is always \"upload\".
     *
     * Values: upload
     */
    @JsonClass(generateAdapter = false)
    enum class `Object`(val value: kotlin.String) {
        @Json(name = "upload") upload("upload");
    }

}

