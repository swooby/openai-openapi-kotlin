/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.openai.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param filename The name of the file to upload. 
 * @param purpose The intended purpose of the uploaded file.  See the [documentation on File purposes](/docs/api-reference/files/create#files-create-purpose). 
 * @param bytes The number of bytes in the file you are uploading. 
 * @param mimeType The MIME type of the file.  This must fall within the supported MIME types for your file purpose. See the supported MIME types for assistants and vision. 
 */


data class CreateUploadRequest (

    /* The name of the file to upload.  */
    @Json(name = "filename")
    val filename: kotlin.String,

    /* The intended purpose of the uploaded file.  See the [documentation on File purposes](/docs/api-reference/files/create#files-create-purpose).  */
    @Json(name = "purpose")
    val purpose: CreateUploadRequest.Purpose,

    /* The number of bytes in the file you are uploading.  */
    @Json(name = "bytes")
    val bytes: kotlin.Int,

    /* The MIME type of the file.  This must fall within the supported MIME types for your file purpose. See the supported MIME types for assistants and vision.  */
    @Json(name = "mime_type")
    val mimeType: kotlin.String

) {

    /**
     * The intended purpose of the uploaded file.  See the [documentation on File purposes](/docs/api-reference/files/create#files-create-purpose). 
     *
     * Values: assistants,batch,fineMinusTune,vision
     */
    @JsonClass(generateAdapter = false)
    enum class Purpose(val value: kotlin.String) {
        @Json(name = "assistants") assistants("assistants"),
        @Json(name = "batch") batch("batch"),
        @Json(name = "fine-tune") fineMinusTune("fine-tune"),
        @Json(name = "vision") vision("vision");
    }

}

