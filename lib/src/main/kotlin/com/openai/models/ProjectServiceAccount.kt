/**
 * Please note: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). Do not edit this file manually.
 */
@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport",
)

package com.openai.models

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Represents an individual service account in a project.
 *
 * @param `object` The object type, which is always
 *   `organization.project.service_account`
 * @param id The identifier, which can be referenced in API endpoints
 * @param name The name of the service account
 * @param role `owner` or `member`
 * @param createdAt The Unix timestamp (in seconds) of when the service account
 *   was created
 */
data class ProjectServiceAccount(

    /* The object type, which is always `organization.project.service_account` */
    @Json(name = "object") val `object`: ProjectServiceAccount.`Object`,

    /* The identifier, which can be referenced in API endpoints */
    @Json(name = "id") val id: kotlin.String,

    /* The name of the service account */
    @Json(name = "name") val name: kotlin.String,

    /* `owner` or `member` */
    @Json(name = "role") val role: ProjectServiceAccount.Role,

    /* The Unix timestamp (in seconds) of when the service account was created */
    @Json(name = "created_at") val createdAt: kotlin.Int,
) {

    /**
     * The object type, which is always `organization.project.service_account`
     *
     * Values: organizationPeriodProjectPeriodService_account
     */
    @JsonClass(generateAdapter = false)
    enum class `Object`(val value: kotlin.String) {
        @Json(name = "organization.project.service_account")
        organizationPeriodProjectPeriodService_account(
            "organization.project.service_account"
        )
    }

    /**
     * `owner` or `member`
     *
     * Values: owner,member
     */
    @JsonClass(generateAdapter = false)
    enum class Role(val value: kotlin.String) {
        @Json(name = "owner") owner("owner"),
        @Json(name = "member") member("member"),
    }
}
