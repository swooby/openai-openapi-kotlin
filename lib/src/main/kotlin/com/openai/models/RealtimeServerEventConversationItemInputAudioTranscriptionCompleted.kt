/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.openai.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * This event is the output of audio transcription for user audio written to the  user audio buffer. Transcription begins when the input audio buffer is  committed by the client or server (in `server_vad` mode). Transcription runs  asynchronously with Response creation, so this event may come before or after  the Response events.  Realtime API models accept audio natively, and thus input transcription is a  separate process run on a separate ASR (Automatic Speech Recognition) model,  currently always `whisper-1`. Thus the transcript may diverge somewhat from  the model's interpretation, and should be treated as a rough guide. 
 *
 * @param eventId The unique ID of the server event.
 * @param type The event type, must be `conversation.item.input_audio_transcription.completed`. 
 * @param itemId The ID of the user message item containing the audio.
 * @param contentIndex The index of the content part containing the audio.
 * @param transcript The transcribed text.
 */


data class RealtimeServerEventConversationItemInputAudioTranscriptionCompleted (

    /* The unique ID of the server event. */
    @Json(name = "event_id")
    val eventId: kotlin.String,

    /* The event type, must be `conversation.item.input_audio_transcription.completed`.  */
    @Json(name = "type")
    val type: RealtimeServerEventConversationItemInputAudioTranscriptionCompleted.Type,

    /* The ID of the user message item containing the audio. */
    @Json(name = "item_id")
    val itemId: kotlin.String,

    /* The index of the content part containing the audio. */
    @Json(name = "content_index")
    val contentIndex: kotlin.Int,

    /* The transcribed text. */
    @Json(name = "transcript")
    val transcript: kotlin.String

) {

    /**
     * The event type, must be `conversation.item.input_audio_transcription.completed`. 
     *
     * Values: conversationPeriodItemPeriodInput_audio_transcriptionPeriodCompleted
     */
    @JsonClass(generateAdapter = false)
    enum class Type(val value: kotlin.String) {
        @Json(name = "conversation.item.input_audio_transcription.completed") conversationPeriodItemPeriodInput_audio_transcriptionPeriodCompleted("conversation.item.input_audio_transcription.completed");
    }

}

