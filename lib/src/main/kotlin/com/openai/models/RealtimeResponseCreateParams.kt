/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.openai.models

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Create a new Realtime response with these parameters
 *
 * @param modalities The set of modalities the model can respond with. To disable audio, set this to [\"text\"]. 
 * @param instructions The default system instructions (i.e. system message) prepended to model  calls. This field allows the client to guide the model on desired  responses. The model can be instructed on response content and format,  (e.g. \"be extremely succinct\", \"act friendly\", \"here are examples of good  responses\") and on audio behavior (e.g. \"talk quickly\", \"inject emotion  into your voice\", \"laugh frequently\"). The instructions are not guaranteed  to be followed by the model, but they provide guidance to the model on the  desired behavior.  Note that the server sets default instructions which will be used if this  field is not set and are visible in the `session.created` event at the  start of the session. 
 * @param voice The voice the model uses to respond. Voice cannot be changed during the  session once the model has responded with audio at least once. Current  voice options are `alloy`, `ash`, `ballad`, `coral`, `echo` `sage`,  `shimmer` and `verse`. 
 * @param outputAudioFormat The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`. 
 * @param tools Tools (functions) available to the model.
 * @param toolChoice How the model chooses tools. Options are `auto`, `none`, `required`, or  specify a function, like `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}`. 
 * @param temperature Sampling temperature for the model, limited to [0.6, 1.2]. Defaults to 0.8. 
 * @param maxResponseOutputTokens 
 * @param conversation 
 * @param metadata Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maximum of 512 characters long. 
 * @param input Input items to include in the prompt for the model. Creates a new context for this response, without including the default conversation. Can include references to items from the default conversation. 
 */


data class RealtimeResponseCreateParams (

    /* The set of modalities the model can respond with. To disable audio, set this to [\"text\"].  */
    @Json(name = "modalities")
    val modalities: kotlin.collections.List<RealtimeSessionModalities>? = null,

    /* The default system instructions (i.e. system message) prepended to model  calls. This field allows the client to guide the model on desired  responses. The model can be instructed on response content and format,  (e.g. \"be extremely succinct\", \"act friendly\", \"here are examples of good  responses\") and on audio behavior (e.g. \"talk quickly\", \"inject emotion  into your voice\", \"laugh frequently\"). The instructions are not guaranteed  to be followed by the model, but they provide guidance to the model on the  desired behavior.  Note that the server sets default instructions which will be used if this  field is not set and are visible in the `session.created` event at the  start of the session.  */
    @Json(name = "instructions")
    val instructions: kotlin.String? = null,

    /* The voice the model uses to respond. Voice cannot be changed during the  session once the model has responded with audio at least once. Current  voice options are `alloy`, `ash`, `ballad`, `coral`, `echo` `sage`,  `shimmer` and `verse`.  */
    @Json(name = "voice")
    val voice: RealtimeSessionVoice? = null,

    /* The format of output audio. Options are `pcm16`, `g711_ulaw`, or `g711_alaw`.  */
    @Json(name = "output_audio_format")
    val outputAudioFormat: RealtimeSessionOutputAudioFormat? = null,

    /* Tools (functions) available to the model. */
    @Json(name = "tools")
    val tools: kotlin.collections.List<RealtimeSessionTools>? = null,

    /* How the model chooses tools. Options are `auto`, `none`, `required`, or  specify a function, like `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}`.  */
    @Json(name = "tool_choice")
    val toolChoice: kotlin.String? = null,

    /* Sampling temperature for the model, limited to [0.6, 1.2]. Defaults to 0.8.  */
    @Json(name = "temperature")
    val temperature: java.math.BigDecimal? = null,

    @Json(name = "max_response_output_tokens")
    val maxResponseOutputTokens: RealtimeSessionMaxResponseOutputTokens? = null,

    @Json(name = "conversation")
    val conversation: RealtimeResponseCreateParamsConversation? = null,

    /* Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maximum of 512 characters long.  */
    @Json(name = "metadata")
    val metadata: kotlin.Any? = null,

    /* Input items to include in the prompt for the model. Creates a new context for this response, without including the default conversation. Can include references to items from the default conversation.  */
    @Json(name = "input")
    val input: kotlin.collections.List<RealtimeConversationItem>? = null

) {
    /**
     * Controls which conversation the response is added to. Currently supports `auto` and `none`, with `auto` as the default value. The `auto` value means that the contents of the response will be added to the default conversation. Set this to `none` to create an out-of-band response which  will not add items to default conversation.
     *
     */
    @JsonClass(generateAdapter = false)
    enum class RealtimeResponseCreateParamsConversation {
        auto,
        none;
    }
}

