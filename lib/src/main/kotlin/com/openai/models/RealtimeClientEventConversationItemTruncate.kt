/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.openai.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Send this event to truncate a previous assistant messageâ€™s audio. The server  will produce audio faster than realtime, so this event is useful when the user  interrupts to truncate audio that has already been sent to the client but not  yet played. This will synchronize the server's understanding of the audio with  the client's playback.  Truncating audio will delete the server-side text transcript to ensure there  is not text in the context that hasn't been heard by the user.  If successful, the server will respond with a `conversation.item.truncated`  event.  
 *
 * @param type The event type, must be `conversation.item.truncate`.
 * @param itemId The ID of the assistant message item to truncate. Only assistant message  items can be truncated. 
 * @param contentIndex The index of the content part to truncate. Set this to 0.
 * @param audioEndMs Inclusive duration up to which audio is truncated, in milliseconds. If  the audio_end_ms is greater than the actual audio duration, the server  will respond with an error. 
 * @param eventId Optional client-generated ID used to identify this event.
 */


data class RealtimeClientEventConversationItemTruncate (

    /* The event type, must be `conversation.item.truncate`. */
    @Json(name = "type")
    val type: RealtimeClientEventConversationItemTruncate.Type = RealtimeClientEventConversationItemTruncate.Type.conversationPeriodItemPeriodTruncate,

    /* The ID of the assistant message item to truncate. Only assistant message  items can be truncated.  */
    @Json(name = "item_id")
    val itemId: kotlin.String,

    /* The index of the content part to truncate. Set this to 0. */
    @Json(name = "content_index")
    val contentIndex: kotlin.Int,

    /* Inclusive duration up to which audio is truncated, in milliseconds. If  the audio_end_ms is greater than the actual audio duration, the server  will respond with an error.  */
    @Json(name = "audio_end_ms")
    val audioEndMs: kotlin.Int,

    /* Optional client-generated ID used to identify this event. */
    @Json(name = "event_id")
    val eventId: kotlin.String? = null

) {

    /**
     * The event type, must be `conversation.item.truncate`.
     *
     * Values: conversationPeriodItemPeriodTruncate
     */
    @JsonClass(generateAdapter = false)
    enum class Type(val value: kotlin.String) {
        @Json(name = "conversation.item.truncate") conversationPeriodItemPeriodTruncate("conversation.item.truncate");
    }

}

