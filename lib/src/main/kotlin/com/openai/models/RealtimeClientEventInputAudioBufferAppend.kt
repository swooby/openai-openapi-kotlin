/**
 * Please note: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). Do not edit this file manually.
 */
@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport",
)

package com.openai.models

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Send this event to append audio bytes to the input audio buffer. The audio
 * buffer is temporary storage you can write to and later commit. In Server VAD
 * mode, the audio buffer is used to detect speech and the server will decide
 * when to commit. When Server VAD is disabled, you must commit the audio buffer
 * manually. The client may choose how much audio to place in each event up to a
 * maximum of 15 MiB, for example streaming smaller chunks from the client may
 * allow the VAD to be more responsive. Unlike made other client events, the
 * server will not send a confirmation response to this event.
 *
 * @param type The event type, must be `input_audio_buffer.append`.
 * @param audio Base64-encoded audio bytes. This must be in the format specified
 *   by the `input_audio_format` field in the session configuration.
 * @param eventId Optional client-generated ID used to identify this event.
 */
data class RealtimeClientEventInputAudioBufferAppend(

    /* The event type, must be `input_audio_buffer.append`. */
    @Json(name = "type")
    val type: RealtimeClientEventInputAudioBufferAppend.Type =
        RealtimeClientEventInputAudioBufferAppend.Type
            .input_audio_bufferPeriodAppend,

    /* Base64-encoded audio bytes. This must be in the format specified by the  `input_audio_format` field in the session configuration.  */
    @Json(name = "audio") val audio: kotlin.String,

    /* Optional client-generated ID used to identify this event. */
    @Json(name = "event_id") val eventId: kotlin.String? = null,
) {

    /**
     * The event type, must be `input_audio_buffer.append`.
     *
     * Values: input_audio_bufferPeriodAppend
     */
    @JsonClass(generateAdapter = false)
    enum class Type(val value: kotlin.String) {
        @Json(name = "input_audio_buffer.append")
        input_audio_bufferPeriodAppend("input_audio_buffer.append")
    }
}
