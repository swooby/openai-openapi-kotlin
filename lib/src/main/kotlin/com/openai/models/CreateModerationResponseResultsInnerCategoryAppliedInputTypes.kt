/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.openai.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * A list of the categories along with the input type(s) that the score applies to.
 *
 * @param hate The applied input type(s) for the category 'hate'.
 * @param hateThreatening The applied input type(s) for the category 'hate/threatening'.
 * @param harassment The applied input type(s) for the category 'harassment'.
 * @param harassmentThreatening The applied input type(s) for the category 'harassment/threatening'.
 * @param illicit The applied input type(s) for the category 'illicit'.
 * @param illicitViolent The applied input type(s) for the category 'illicit/violent'.
 * @param selfHarm The applied input type(s) for the category 'self-harm'.
 * @param selfHarmIntent The applied input type(s) for the category 'self-harm/intent'.
 * @param selfHarmInstructions The applied input type(s) for the category 'self-harm/instructions'.
 * @param sexual The applied input type(s) for the category 'sexual'.
 * @param sexualMinors The applied input type(s) for the category 'sexual/minors'.
 * @param violence The applied input type(s) for the category 'violence'.
 * @param violenceGraphic The applied input type(s) for the category 'violence/graphic'.
 */


data class CreateModerationResponseResultsInnerCategoryAppliedInputTypes (

    /* The applied input type(s) for the category 'hate'. */
    @Json(name = "hate")
    val hate: kotlin.collections.List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.Hate>,

    /* The applied input type(s) for the category 'hate/threatening'. */
    @Json(name = "hate/threatening")
    val hateThreatening: kotlin.collections.List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.HateThreatening>,

    /* The applied input type(s) for the category 'harassment'. */
    @Json(name = "harassment")
    val harassment: kotlin.collections.List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.Harassment>,

    /* The applied input type(s) for the category 'harassment/threatening'. */
    @Json(name = "harassment/threatening")
    val harassmentThreatening: kotlin.collections.List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.HarassmentThreatening>,

    /* The applied input type(s) for the category 'illicit'. */
    @Json(name = "illicit")
    val illicit: kotlin.collections.List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.Illicit>,

    /* The applied input type(s) for the category 'illicit/violent'. */
    @Json(name = "illicit/violent")
    val illicitViolent: kotlin.collections.List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.IllicitViolent>,

    /* The applied input type(s) for the category 'self-harm'. */
    @Json(name = "self-harm")
    val selfHarm: kotlin.collections.List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.SelfHarm>,

    /* The applied input type(s) for the category 'self-harm/intent'. */
    @Json(name = "self-harm/intent")
    val selfHarmIntent: kotlin.collections.List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.SelfHarmIntent>,

    /* The applied input type(s) for the category 'self-harm/instructions'. */
    @Json(name = "self-harm/instructions")
    val selfHarmInstructions: kotlin.collections.List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.SelfHarmInstructions>,

    /* The applied input type(s) for the category 'sexual'. */
    @Json(name = "sexual")
    val sexual: kotlin.collections.List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.Sexual>,

    /* The applied input type(s) for the category 'sexual/minors'. */
    @Json(name = "sexual/minors")
    val sexualMinors: kotlin.collections.List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.SexualMinors>,

    /* The applied input type(s) for the category 'violence'. */
    @Json(name = "violence")
    val violence: kotlin.collections.List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.Violence>,

    /* The applied input type(s) for the category 'violence/graphic'. */
    @Json(name = "violence/graphic")
    val violenceGraphic: kotlin.collections.List<CreateModerationResponseResultsInnerCategoryAppliedInputTypes.ViolenceGraphic>

) {

    /**
     * The applied input type(s) for the category 'hate'.
     *
     * Values: text
     */
    @JsonClass(generateAdapter = false)
    enum class Hate(val value: kotlin.String) {
        @Json(name = "text") text("text");
    }
    /**
     * The applied input type(s) for the category 'hate/threatening'.
     *
     * Values: text
     */
    @JsonClass(generateAdapter = false)
    enum class HateThreatening(val value: kotlin.String) {
        @Json(name = "text") text("text");
    }
    /**
     * The applied input type(s) for the category 'harassment'.
     *
     * Values: text
     */
    @JsonClass(generateAdapter = false)
    enum class Harassment(val value: kotlin.String) {
        @Json(name = "text") text("text");
    }
    /**
     * The applied input type(s) for the category 'harassment/threatening'.
     *
     * Values: text
     */
    @JsonClass(generateAdapter = false)
    enum class HarassmentThreatening(val value: kotlin.String) {
        @Json(name = "text") text("text");
    }
    /**
     * The applied input type(s) for the category 'illicit'.
     *
     * Values: text
     */
    @JsonClass(generateAdapter = false)
    enum class Illicit(val value: kotlin.String) {
        @Json(name = "text") text("text");
    }
    /**
     * The applied input type(s) for the category 'illicit/violent'.
     *
     * Values: text
     */
    @JsonClass(generateAdapter = false)
    enum class IllicitViolent(val value: kotlin.String) {
        @Json(name = "text") text("text");
    }
    /**
     * The applied input type(s) for the category 'self-harm'.
     *
     * Values: text,image
     */
    @JsonClass(generateAdapter = false)
    enum class SelfHarm(val value: kotlin.String) {
        @Json(name = "text") text("text"),
        @Json(name = "image") image("image");
    }
    /**
     * The applied input type(s) for the category 'self-harm/intent'.
     *
     * Values: text,image
     */
    @JsonClass(generateAdapter = false)
    enum class SelfHarmIntent(val value: kotlin.String) {
        @Json(name = "text") text("text"),
        @Json(name = "image") image("image");
    }
    /**
     * The applied input type(s) for the category 'self-harm/instructions'.
     *
     * Values: text,image
     */
    @JsonClass(generateAdapter = false)
    enum class SelfHarmInstructions(val value: kotlin.String) {
        @Json(name = "text") text("text"),
        @Json(name = "image") image("image");
    }
    /**
     * The applied input type(s) for the category 'sexual'.
     *
     * Values: text,image
     */
    @JsonClass(generateAdapter = false)
    enum class Sexual(val value: kotlin.String) {
        @Json(name = "text") text("text"),
        @Json(name = "image") image("image");
    }
    /**
     * The applied input type(s) for the category 'sexual/minors'.
     *
     * Values: text
     */
    @JsonClass(generateAdapter = false)
    enum class SexualMinors(val value: kotlin.String) {
        @Json(name = "text") text("text");
    }
    /**
     * The applied input type(s) for the category 'violence'.
     *
     * Values: text,image
     */
    @JsonClass(generateAdapter = false)
    enum class Violence(val value: kotlin.String) {
        @Json(name = "text") text("text"),
        @Json(name = "image") image("image");
    }
    /**
     * The applied input type(s) for the category 'violence/graphic'.
     *
     * Values: text,image
     */
    @JsonClass(generateAdapter = false)
    enum class ViolenceGraphic(val value: kotlin.String) {
        @Json(name = "text") text("text"),
        @Json(name = "image") image("image");
    }

}

