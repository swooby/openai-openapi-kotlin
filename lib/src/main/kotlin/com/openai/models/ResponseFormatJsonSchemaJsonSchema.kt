/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.openai.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param name The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
 * @param description A description of what the response format is for, used by the model to determine how to respond in the format.
 * @param schema The schema for the response format, described as a JSON Schema object.
 * @param strict Whether to enable strict schema adherence when generating the output. If set to true, the model will always follow the exact schema defined in the `schema` field. Only a subset of JSON Schema is supported when `strict` is `true`. To learn more, read the [Structured Outputs guide](/docs/guides/structured-outputs).
 */


data class ResponseFormatJsonSchemaJsonSchema (

    /* The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64. */
    @Json(name = "name")
    val name: kotlin.String,

    /* A description of what the response format is for, used by the model to determine how to respond in the format. */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* The schema for the response format, described as a JSON Schema object. */
    @Json(name = "schema")
    val schema: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    /* Whether to enable strict schema adherence when generating the output. If set to true, the model will always follow the exact schema defined in the `schema` field. Only a subset of JSON Schema is supported when `strict` is `true`. To learn more, read the [Structured Outputs guide](/docs/guides/structured-outputs). */
    @Json(name = "strict")
    val strict: kotlin.Boolean? = false

) {


}

