/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.openai.apis

import java.io.IOException
import okhttp3.Call
import okhttp3.HttpUrl

import com.openai.models.AuditLogEventType
import com.openai.models.ListAuditLogsEffectiveAtParameter
import com.openai.models.ListAuditLogsResponse

import com.squareup.moshi.Json

import com.openai.infrastructure.ApiClient
import com.openai.infrastructure.ApiResponse
import com.openai.infrastructure.ClientException
import com.openai.infrastructure.ClientError
import com.openai.infrastructure.ServerException
import com.openai.infrastructure.ServerError
import com.openai.infrastructure.MultiValueMap
import com.openai.infrastructure.PartConfig
import com.openai.infrastructure.RequestConfig
import com.openai.infrastructure.RequestMethod
import com.openai.infrastructure.ResponseType
import com.openai.infrastructure.Success
import com.openai.infrastructure.toMultiValue

class AuditLogsApi(basePath: kotlin.String = defaultBasePath, client: Call.Factory = ApiClient.defaultClient) : ApiClient(basePath, client) {
    companion object {
        @JvmStatic
        val defaultBasePath: String by lazy {
            System.getProperties().getProperty(ApiClient.baseUrlKey, "https://api.openai.com/v1")
        }
    }

    /**
     * List user actions and configuration changes within this organization.
     * 
     * @param effectiveAt Return only events whose &#x60;effective_at&#x60; (Unix seconds) is in this range. (optional)
     * @param projectIds Return only events for these projects. (optional)
     * @param eventTypes Return only events with a &#x60;type&#x60; in one of these values. For example, &#x60;project.created&#x60;. For all options, see the documentation for the [audit log object](/docs/api-reference/audit-logs/object). (optional)
     * @param actorIds Return only events performed by these actors. Can be a user ID, a service account ID, or an api key tracking ID. (optional)
     * @param actorEmails Return only events performed by users with these emails. (optional)
     * @param resourceIds Return only events performed on these targets. For example, a project ID updated. (optional)
     * @param limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.  (optional, default to 20)
     * @param after A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list.  (optional)
     * @param before A cursor for use in pagination. &#x60;before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_foo, your subsequent call can include before&#x3D;obj_foo in order to fetch the previous page of the list.  (optional)
     * @return ListAuditLogsResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun listAuditLogs(effectiveAt: ListAuditLogsEffectiveAtParameter? = null, projectIds: kotlin.collections.List<kotlin.String>? = null, eventTypes: kotlin.collections.List<AuditLogEventType>? = null, actorIds: kotlin.collections.List<kotlin.String>? = null, actorEmails: kotlin.collections.List<kotlin.String>? = null, resourceIds: kotlin.collections.List<kotlin.String>? = null, limit: kotlin.Int? = 20, after: kotlin.String? = null, before: kotlin.String? = null) : ListAuditLogsResponse {
        val localVarResponse = listAuditLogsWithHttpInfo(effectiveAt = effectiveAt, projectIds = projectIds, eventTypes = eventTypes, actorIds = actorIds, actorEmails = actorEmails, resourceIds = resourceIds, limit = limit, after = after, before = before)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as ListAuditLogsResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * List user actions and configuration changes within this organization.
     * 
     * @param effectiveAt Return only events whose &#x60;effective_at&#x60; (Unix seconds) is in this range. (optional)
     * @param projectIds Return only events for these projects. (optional)
     * @param eventTypes Return only events with a &#x60;type&#x60; in one of these values. For example, &#x60;project.created&#x60;. For all options, see the documentation for the [audit log object](/docs/api-reference/audit-logs/object). (optional)
     * @param actorIds Return only events performed by these actors. Can be a user ID, a service account ID, or an api key tracking ID. (optional)
     * @param actorEmails Return only events performed by users with these emails. (optional)
     * @param resourceIds Return only events performed on these targets. For example, a project ID updated. (optional)
     * @param limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.  (optional, default to 20)
     * @param after A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list.  (optional)
     * @param before A cursor for use in pagination. &#x60;before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_foo, your subsequent call can include before&#x3D;obj_foo in order to fetch the previous page of the list.  (optional)
     * @return ApiResponse<ListAuditLogsResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun listAuditLogsWithHttpInfo(effectiveAt: ListAuditLogsEffectiveAtParameter?, projectIds: kotlin.collections.List<kotlin.String>?, eventTypes: kotlin.collections.List<AuditLogEventType>?, actorIds: kotlin.collections.List<kotlin.String>?, actorEmails: kotlin.collections.List<kotlin.String>?, resourceIds: kotlin.collections.List<kotlin.String>?, limit: kotlin.Int?, after: kotlin.String?, before: kotlin.String?) : ApiResponse<ListAuditLogsResponse?> {
        val localVariableConfig = listAuditLogsRequestConfig(effectiveAt = effectiveAt, projectIds = projectIds, eventTypes = eventTypes, actorIds = actorIds, actorEmails = actorEmails, resourceIds = resourceIds, limit = limit, after = after, before = before)

        return request<Unit, ListAuditLogsResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation listAuditLogs
     *
     * @param effectiveAt Return only events whose &#x60;effective_at&#x60; (Unix seconds) is in this range. (optional)
     * @param projectIds Return only events for these projects. (optional)
     * @param eventTypes Return only events with a &#x60;type&#x60; in one of these values. For example, &#x60;project.created&#x60;. For all options, see the documentation for the [audit log object](/docs/api-reference/audit-logs/object). (optional)
     * @param actorIds Return only events performed by these actors. Can be a user ID, a service account ID, or an api key tracking ID. (optional)
     * @param actorEmails Return only events performed by users with these emails. (optional)
     * @param resourceIds Return only events performed on these targets. For example, a project ID updated. (optional)
     * @param limit A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.  (optional, default to 20)
     * @param after A cursor for use in pagination. &#x60;after&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after&#x3D;obj_foo in order to fetch the next page of the list.  (optional)
     * @param before A cursor for use in pagination. &#x60;before&#x60; is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_foo, your subsequent call can include before&#x3D;obj_foo in order to fetch the previous page of the list.  (optional)
     * @return RequestConfig
     */
    fun listAuditLogsRequestConfig(effectiveAt: ListAuditLogsEffectiveAtParameter?, projectIds: kotlin.collections.List<kotlin.String>?, eventTypes: kotlin.collections.List<AuditLogEventType>?, actorIds: kotlin.collections.List<kotlin.String>?, actorEmails: kotlin.collections.List<kotlin.String>?, resourceIds: kotlin.collections.List<kotlin.String>?, limit: kotlin.Int?, after: kotlin.String?, before: kotlin.String?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (effectiveAt != null) {
                    put("effective_at", listOf(effectiveAt.toString()))
                }
                if (projectIds != null) {
                    put("project_ids[]", toMultiValue(projectIds.toList(), "multi"))
                }
                if (eventTypes != null) {
                    put("event_types[]", toMultiValue(eventTypes.toList(), "multi"))
                }
                if (actorIds != null) {
                    put("actor_ids[]", toMultiValue(actorIds.toList(), "multi"))
                }
                if (actorEmails != null) {
                    put("actor_emails[]", toMultiValue(actorEmails.toList(), "multi"))
                }
                if (resourceIds != null) {
                    put("resource_ids[]", toMultiValue(resourceIds.toList(), "multi"))
                }
                if (limit != null) {
                    put("limit", listOf(limit.toString()))
                }
                if (after != null) {
                    put("after", listOf(after.toString()))
                }
                if (before != null) {
                    put("before", listOf(before.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/organization/audit_logs",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }


    private fun encodeURIComponent(uriComponent: kotlin.String): kotlin.String =
        HttpUrl.Builder().scheme("http").host("localhost").addPathSegment(uriComponent).build().encodedPathSegments[0]
}
