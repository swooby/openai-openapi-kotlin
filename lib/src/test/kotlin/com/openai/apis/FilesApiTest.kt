/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.openai.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.openai.apis.FilesApi
import com.openai.models.DeleteFileResponse
import com.openai.models.ListFilesResponse
import com.openai.models.OpenAIFile

class FilesApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of FilesApi
        //val apiInstance = FilesApi()

        // to test createFile
        should("test createFile") {
            // uncomment below to test createFile
            //val file : java.io.File = BINARY_DATA_HERE // java.io.File | The File object (not file name) to be uploaded. 
            //val purpose : kotlin.String = purpose_example // kotlin.String | The intended purpose of the uploaded file.  Use \\\"assistants\\\" for [Assistants](/docs/api-reference/assistants) and [Message](/docs/api-reference/messages) files, \\\"vision\\\" for Assistants image file inputs, \\\"batch\\\" for [Batch API](/docs/guides/batch), and \\\"fine-tune\\\" for [Fine-tuning](/docs/api-reference/fine-tuning). 
            //val result : OpenAIFile = apiInstance.createFile(file, purpose)
            //result shouldBe ("TODO")
        }

        // to test deleteFile
        should("test deleteFile") {
            // uncomment below to test deleteFile
            //val fileId : kotlin.String = fileId_example // kotlin.String | The ID of the file to use for this request.
            //val result : DeleteFileResponse = apiInstance.deleteFile(fileId)
            //result shouldBe ("TODO")
        }

        // to test downloadFile
        should("test downloadFile") {
            // uncomment below to test downloadFile
            //val fileId : kotlin.String = fileId_example // kotlin.String | The ID of the file to use for this request.
            //val result : kotlin.String = apiInstance.downloadFile(fileId)
            //result shouldBe ("TODO")
        }

        // to test listFiles
        should("test listFiles") {
            // uncomment below to test listFiles
            //val purpose : kotlin.String = purpose_example // kotlin.String | Only return files with the given purpose.
            //val limit : kotlin.Int = 56 // kotlin.Int | A limit on the number of objects to be returned. Limit can range between 1 and 10,000, and the default is 10,000. 
            //val order : kotlin.String = order_example // kotlin.String | Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and `desc` for descending order. 
            //val after : kotlin.String = after_example // kotlin.String | A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list. 
            //val result : ListFilesResponse = apiInstance.listFiles(purpose, limit, order, after)
            //result shouldBe ("TODO")
        }

        // to test retrieveFile
        should("test retrieveFile") {
            // uncomment below to test retrieveFile
            //val fileId : kotlin.String = fileId_example // kotlin.String | The ID of the file to use for this request.
            //val result : OpenAIFile = apiInstance.retrieveFile(fileId)
            //result shouldBe ("TODO")
        }

    }
}
