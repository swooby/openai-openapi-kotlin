/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.openai.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.openai.models.AuditLog
import com.openai.models.AuditLogActor
import com.openai.models.AuditLogApiKeyCreated
import com.openai.models.AuditLogApiKeyDeleted
import com.openai.models.AuditLogApiKeyUpdated
import com.openai.models.AuditLogEventType
import com.openai.models.AuditLogInviteAccepted
import com.openai.models.AuditLogInviteSent
import com.openai.models.AuditLogLoginFailed
import com.openai.models.AuditLogOrganizationUpdated
import com.openai.models.AuditLogProject
import com.openai.models.AuditLogProjectArchived
import com.openai.models.AuditLogProjectCreated
import com.openai.models.AuditLogProjectUpdated
import com.openai.models.AuditLogRateLimitDeleted
import com.openai.models.AuditLogRateLimitUpdated
import com.openai.models.AuditLogServiceAccountCreated
import com.openai.models.AuditLogServiceAccountDeleted
import com.openai.models.AuditLogServiceAccountUpdated
import com.openai.models.AuditLogUserAdded
import com.openai.models.AuditLogUserDeleted
import com.openai.models.AuditLogUserUpdated

class AuditLogTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AuditLog
        //val modelInstance = AuditLog()

        // to test the property `id` - The ID of this log.
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `type`
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `effectiveAt` - The Unix timestamp (in seconds) of the event.
        should("test effectiveAt") {
            // uncomment below to test the property
            //modelInstance.effectiveAt shouldBe ("TODO")
        }

        // to test the property `actor`
        should("test actor") {
            // uncomment below to test the property
            //modelInstance.actor shouldBe ("TODO")
        }

        // to test the property `project`
        should("test project") {
            // uncomment below to test the property
            //modelInstance.project shouldBe ("TODO")
        }

        // to test the property `apiKeyCreated`
        should("test apiKeyCreated") {
            // uncomment below to test the property
            //modelInstance.apiKeyCreated shouldBe ("TODO")
        }

        // to test the property `apiKeyUpdated`
        should("test apiKeyUpdated") {
            // uncomment below to test the property
            //modelInstance.apiKeyUpdated shouldBe ("TODO")
        }

        // to test the property `apiKeyDeleted`
        should("test apiKeyDeleted") {
            // uncomment below to test the property
            //modelInstance.apiKeyDeleted shouldBe ("TODO")
        }

        // to test the property `inviteSent`
        should("test inviteSent") {
            // uncomment below to test the property
            //modelInstance.inviteSent shouldBe ("TODO")
        }

        // to test the property `inviteAccepted`
        should("test inviteAccepted") {
            // uncomment below to test the property
            //modelInstance.inviteAccepted shouldBe ("TODO")
        }

        // to test the property `inviteDeleted`
        should("test inviteDeleted") {
            // uncomment below to test the property
            //modelInstance.inviteDeleted shouldBe ("TODO")
        }

        // to test the property `loginFailed`
        should("test loginFailed") {
            // uncomment below to test the property
            //modelInstance.loginFailed shouldBe ("TODO")
        }

        // to test the property `logoutFailed`
        should("test logoutFailed") {
            // uncomment below to test the property
            //modelInstance.logoutFailed shouldBe ("TODO")
        }

        // to test the property `organizationUpdated`
        should("test organizationUpdated") {
            // uncomment below to test the property
            //modelInstance.organizationUpdated shouldBe ("TODO")
        }

        // to test the property `projectCreated`
        should("test projectCreated") {
            // uncomment below to test the property
            //modelInstance.projectCreated shouldBe ("TODO")
        }

        // to test the property `projectUpdated`
        should("test projectUpdated") {
            // uncomment below to test the property
            //modelInstance.projectUpdated shouldBe ("TODO")
        }

        // to test the property `projectArchived`
        should("test projectArchived") {
            // uncomment below to test the property
            //modelInstance.projectArchived shouldBe ("TODO")
        }

        // to test the property `rateLimitUpdated`
        should("test rateLimitUpdated") {
            // uncomment below to test the property
            //modelInstance.rateLimitUpdated shouldBe ("TODO")
        }

        // to test the property `rateLimitDeleted`
        should("test rateLimitDeleted") {
            // uncomment below to test the property
            //modelInstance.rateLimitDeleted shouldBe ("TODO")
        }

        // to test the property `serviceAccountCreated`
        should("test serviceAccountCreated") {
            // uncomment below to test the property
            //modelInstance.serviceAccountCreated shouldBe ("TODO")
        }

        // to test the property `serviceAccountUpdated`
        should("test serviceAccountUpdated") {
            // uncomment below to test the property
            //modelInstance.serviceAccountUpdated shouldBe ("TODO")
        }

        // to test the property `serviceAccountDeleted`
        should("test serviceAccountDeleted") {
            // uncomment below to test the property
            //modelInstance.serviceAccountDeleted shouldBe ("TODO")
        }

        // to test the property `userAdded`
        should("test userAdded") {
            // uncomment below to test the property
            //modelInstance.userAdded shouldBe ("TODO")
        }

        // to test the property `userUpdated`
        should("test userUpdated") {
            // uncomment below to test the property
            //modelInstance.userUpdated shouldBe ("TODO")
        }

        // to test the property `userDeleted`
        should("test userDeleted") {
            // uncomment below to test the property
            //modelInstance.userDeleted shouldBe ("TODO")
        }

    }
}
