/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.openai.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.openai.models.RealtimeClientEventConversationItemCreate
import com.openai.models.RealtimeConversationItem

class RealtimeClientEventConversationItemCreateTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of RealtimeClientEventConversationItemCreate
        //val modelInstance = RealtimeClientEventConversationItemCreate()

        // to test the property `type` - The event type, must be `conversation.item.create`.
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `item`
        should("test item") {
            // uncomment below to test the property
            //modelInstance.item shouldBe ("TODO")
        }

        // to test the property `eventId` - Optional client-generated ID used to identify this event.
        should("test eventId") {
            // uncomment below to test the property
            //modelInstance.eventId shouldBe ("TODO")
        }

        // to test the property `previousItemId` - The ID of the preceding item after which the new item will be inserted.  If not set, the new item will be appended to the end of the conversation.  If set, it allows an item to be inserted mid-conversation. If the ID  cannot be found, an error will be returned and the item will not be added. 
        should("test previousItemId") {
            // uncomment below to test the property
            //modelInstance.previousItemId shouldBe ("TODO")
        }

    }
}
