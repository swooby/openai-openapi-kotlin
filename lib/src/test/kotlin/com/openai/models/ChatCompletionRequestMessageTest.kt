/**
 * Please note: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). Do not edit this file manually.
 */
@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport",
)

package com.openai.models

import io.kotlintest.specs.ShouldSpec

class ChatCompletionRequestMessageTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ChatCompletionRequestMessage
        // val modelInstance = ChatCompletionRequestMessage()

        // to test the property `content` - The contents of the function
        // message.
        should("test content") {
            // uncomment below to test the property
            // modelInstance.content shouldBe ("TODO")
        }

        // to test the property `role` - The role of the messages author, in
        // this case `function`.
        should("test role") {
            // uncomment below to test the property
            // modelInstance.role shouldBe ("TODO")
        }

        // to test the property `name` - The name of the function to call.
        should("test name") {
            // uncomment below to test the property
            // modelInstance.name shouldBe ("TODO")
        }

        // to test the property `toolCallId` - Tool call that this message is
        // responding to.
        should("test toolCallId") {
            // uncomment below to test the property
            // modelInstance.toolCallId shouldBe ("TODO")
        }

        // to test the property `refusal` - The refusal message by the
        // assistant.
        should("test refusal") {
            // uncomment below to test the property
            // modelInstance.refusal shouldBe ("TODO")
        }

        // to test the property `audio`
        should("test audio") {
            // uncomment below to test the property
            // modelInstance.audio shouldBe ("TODO")
        }

        // to test the property `toolCalls` - The tool calls generated by the
        // model, such as function calls.
        should("test toolCalls") {
            // uncomment below to test the property
            // modelInstance.toolCalls shouldBe ("TODO")
        }

        // to test the property `functionCall`
        should("test functionCall") {
            // uncomment below to test the property
            // modelInstance.functionCall shouldBe ("TODO")
        }
    }
}
